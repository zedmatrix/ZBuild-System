#
#         Blank Install zbuild
#   unset functions
#
unset -f Src_package
unset -f Src_prepare
unset -f Src_configure
unset -f Src_compile
unset -f Src_check
unset -f Src_install
unset -f Src_post
#
#   Build Functions
# 
# Extract the base package name and version
Src_package() {
    packagedir=${archive%.tar.*}       # Remove the .tar.gz (or .tar.bz2, etc.) part
    package=${packagedir%-*}               # Extracts the package name (everything before the last hyphe>
    pkgver=${packagedir##*-}           # Extracts the version (everything after the last hyphen)
}

Src_prepare () {
   echo "*** Preparing ${package} ***"

}

Src_configure () {
   echo "*** Configuring ${package} ***"
   ./configure ${prefix} ${sysconf} ${statedir} ${enable} ${static} ${disable} ${docdir} ${system} || exit 88
}
Src_compile () {
   echo "*** Compiling ${package} ***"
   make || exit 77
}
Src_check () {
   echo "*** Checking ${package} ***"
   make check
}
Src_install () {
   echo "*** Installing ${package} ***"
   make install || exit 55
}
Src_post () {
   echo "*** Finalizing ${package} ***"
   ln -sfv /etc/machine-id /var/lib/dbus
}

export -f Src_prepare
export -f Src_configure
export -f Src_compile
export -f Src_check
export -f Src_install
export -f Src_post
#
#   Define configure options
#
BUILD_SOURCE=/sources
BUILD_ROOT=/BUILD
export BUILD_SOURCE BUILD_ROOT

package=dbus-1.14.10
archive=$(find $BUILD_SOURCE -name "${package}*.tar.*" | head -n 1 | xargs basename)
extract="true"
delete="true"
patch="false"

Src_package
#
# Start defining package specific options
# 
prefix="--prefix=/usr"
sysconf="--sysconfdir=/etc"
statedir="--localstatedir=/var --runstatedir=/run"
enable="--enable-user-session"
static="--disable-static"
disable="--disable-doxygen-docs --disable-xml-docs"
docdir="--docdir=/usr/share/doc/${packagedir}"
system="--with-system-socket=/run/dbus/system_bus_socket"

export package packagedir archive prefix sysconf extract patch delete
export statedir enable static disable docdir system

$BUILD_ROOT/zbuild.sh
exit_code=$?

if [[ exit_code -ne 0 ]]; then
    echo "___ Error Code: $exit_code"
else
    echo "*** Success ***"
    unset -f Src_package
    unset -f Src_prepare
    unset -f Src_configure
    unset -f Src_compile
    unset -f Src_check
    unset -f Src_install
    unset -f Src_post
    unset package packagedir archive prefix sysconf extract patch delete
    unset statedir enable static disable docdir system
fi

