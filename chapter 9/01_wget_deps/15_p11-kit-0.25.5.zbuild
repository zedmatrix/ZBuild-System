#!/bin/bash
#
#	p11-kit-0.25.5
#   unset functions
unset -f Src_package
unset -f Src_prepare
unset -f Src_configure
unset -f Src_compile
unset -f Src_check
unset -f Src_install
unset -f Src_post
#
#  Global
#
BUILD_SOURCE=/opt/source
BUILD_ROOT=/BUILD
BUILD_LOG=$BUILD_ROOT/Zbuild_Logs

package=p11-kit-0.25.5
archive=$(find $BUILD_SOURCE -name "${package}*.tar.*" | head -n 1 | xargs basename)
delete="true"
patch="false"
zbuild="${PWD}"
export zbuild

#
#   Build Functions
#
Src_Extract() {
	print "Extracting: ${archive}"
	mkdir -v "$BUILD_ROOT/${packagedir}"
	tar -xf "$BUILD_SOURCE/${archive}" -C "$BUILD_ROOT/${packagedir}" --strip-components=1
}
# First Remove the .tar.* and Second Get Package Name
Src_package() {
    packagedir=${archive%.tar.*}
    package=${packagedir%-*}
	pkgver=${packagedir##*-}
}
# Executed After pushd
Src_prepare() {
	print "Preparing ${packagedir}"
	sed '20,$ d' -i trust/trust-extract-compat
	cat "${zbuild}/15_add_trust.zbuild" >> trust/trust-extract-compat
	mkdir -v p11-build
	cd p11-build
}
Src_configure() {
	print "Configuring ${package}"
	meson setup .. ${prefix} ${build} ${trust} || exit 88
}
Src_compile() {
	print "Compiling ${package}"
	ninja || exit 77
}
Src_check() {
	print "Checking ${package}"
	LC_ALL=C \
	ninja test 2>&1 | tee $BUILD_LOG/${packagedir}-test.log
}
Src_install() {
	print "Installing ${package}"
	ninja install || exit 55
	ln -sfv /usr/libexec/p11-kit/trust-extract-compat /usr/bin/update-ca-certificates
	ln -sfv ./pkcs11/p11-kit-trust.so /usr/lib/libnssckbi.so
}
# Executed After popd
Src_post() {
	print "Finalizing ${packagedir}"
	/usr/sbin/ldconfig
}
# Extract the base package name and version
Src_package

#
# Start defining package specific options
#
prefix="--prefix=/usr"
build="--buildtype=release"
trust="-D trust_paths=/etc/pki/anchors"

export package packagedir archive delete patch
export prefix build trust
export BUILD_SOURCE BUILD_ROOT BUILD_LOGS
export -f Src_Extract
export -f Src_prepare
export -f Src_configure
export -f Src_compile
export -f Src_check
export -f Src_install
export -f Src_post

$BUILD_ROOT/zbuild2.sh
exit_code=$?

if [[ exit_code -ne 0 ]]; then
    echo "___ Error Code: $exit_code"
else
    echo "*** Success ***"
    unset -f Src_package
    unset -f Src_prepare
    unset -f Src_configure
    unset -f Src_compile
    unset -f Src_check
    unset -f Src_install
    unset -f Src_post
    unset package packagedir archive delete patch
    unset prefix build trust zbuild
fi
