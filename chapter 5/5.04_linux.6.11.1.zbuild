#!/bin/bash
#   Blank Install zbuild
#   unset functions
#
unset -f Src_package
unset -f Src_prepare
unset -f Src_configure
unset -f Src_compile
unset -f Src_check
unset -f Src_install
unset -f Src_post
#
#   Build Functions
# 
# Extract the base package name and version
Src_package() {
    packagedir=${archive%.tar.*}
    package=${packagedir%-*}
}

Src_prepare () {
   echo "*** Preparing ${package} ***"
   make mrproper
}

Src_configure () {
   echo "*** Configuring ${package} ***"

}
Src_compile () {
   echo "*** Compiling ${package} ***"
   make headers || exit 77
}
Src_check () {
   echo "*** Removing Non Header Files from ${package} ***"
   find usr/include -type f ! -name '*.h' -delete
}
Src_install () {
   echo "*** Copying Header Files ${package} ***"
   cp -rv usr/include $LFS/usr
}
Src_post () {
   echo "*** Finalizing ${package} ***"

}

export -f Src_prepare
export -f Src_configure
export -f Src_compile
export -f Src_check
export -f Src_install
export -f Src_post
#
#   Define configure options
#
LFS=/mnt/lfs
LFS_TGT=$(uname -m)-lfs-linux-gnu
BUILD_SOURCE=$LFS/opt/source
BUILD_ROOT=$LFS/BUILD
export LFS LFS_TGT BUILD_SOURCE BUILD_ROOT

package=linux-6.11.1
archive=$(find $BUILD_SOURCE -name "${package}*.tar.*" | head -n 1 | xargs basename)
extract="true"
delete="true"
patch="false"
export extract delete patch

Src_package
#
# Start defining package specific options
# 

export package packagedir archive

$BUILD_ROOT/zbuild.sh
exit_code=$?

if [[ exit_code -ne 0 ]]; then
    echo "___ Error Code: $exit_code"
else
    echo "*** Success ***"
    unset -f Src_package
    unset -f Src_prepare
    unset -f Src_configure
    unset -f Src_compile
    unset -f Src_check
    unset -f Src_install
    unset -f Src_post
    unset package packagedir archive
    unset BUILD_ROOT BUILD_SOURCE
fi

