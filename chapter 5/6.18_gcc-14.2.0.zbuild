#!/bin/bash
#   Blank Install zbuild
#   unset functions
#
unset -f Src_package
unset -f Src_prepare
unset -f Src_configure
unset -f Src_compile
unset -f Src_check
unset -f Src_install
unset -f Src_post
#
#   Build Functions
# 
# Extract the base package name and version
Src_package() {
    packagedir=${archive%.tar.*}
    package=${packagedir%-*}
}

Src_prepare () {
   echo "*** Preparing ${package} ***"
   tar -xf $BUILD_SOURCE/mpfr-4.2.1.tar.xz
   tar -xf $BUILD_SOURCE/gmp-6.3.0.tar.xz
   tar -xf $BUILD_SOURCE/mpc-1.3.1.tar.gz
   mv -v mpfr-4.2.1 mpfr
   mv -v gmp-6.3.0 gmp
   mv -v mpc-1.3.1 mpc

   case $(uname -m) in
     x86_64)
       sed -e '/m64=/s/lib64/lib/' -i.orig gcc/config/i386/t-linux64
     ;;
   esac
   sed '/thread_header =/s/@.*@/gthr-posix.h/' -i libgcc/Makefile.in libstdc++-v3/include/Makefile.in
   mkdir -v build
   cd build
}

Src_configure () {
   echo "*** Configuring ${package} ***"
   build="--build=$(../config.guess)"
   ../configure ${build} ${host} ${target} LDFLAGS_FOR_TARGET=-L$PWD/$LFS_TGT/libgcc ${prefix} ${with} ${enable} ${disable} || exit 88
}
Src_compile () {
   echo "*** Compiling ${package} ***"
   make || exit 77
}
Src_check () {
   echo "*** Checking ${package} ***"

}
Src_install () {
   echo "*** Installing ${package} ***"
   make DESTDIR=$LFS install

}
Src_post () {
   echo "*** Finalizing ${package} ***"
   ln -sv gcc $LFS/usr/bin/cc
}

export -f Src_prepare
export -f Src_configure
export -f Src_compile
export -f Src_check
export -f Src_install
export -f Src_post
#
#   Define configure options
#
LFS=/mnt/lfs
LFS_TGT=$(uname -m)-lfs-linux-gnu
BUILD_SOURCE=$LFS/opt/source
BUILD_ROOT=$LFS/BUILD
export LFS LFS_TGT BUILD_SOURCE BUILD_ROOT

package=gcc-14.2.0
archive=$(find $BUILD_SOURCE -name "${package}*.tar.*" | head -n 1 | xargs basename)
extract="true"
delete="true"
patch="false"

Src_package
#
# Start defining package specific options
# 
host="--host=$LFS_TGT"
target="--target=$LFS_TGT"
prefix="--prefix=/usr"
with="--with-build-sysroot=$LFS"
enable="--enable-default-pie --enable-default-ssp --enable-languages=c,c++"
disable="--disable-nls --disable-multilib --disable-libatomic --disable-libgomp --disable-libquadmath \
 --disable-libsanitizer --disable-libssp --disable-libvtv"

export package packagedir archive patch
export build host target prefix with enable disable
export extract delete patch

$BUILD_ROOT/zbuild.sh
exit_code=$?

if [[ exit_code -ne 0 ]]; then
    echo "___ Error Code: $exit_code"
else
    echo "*** Success ***"
    unset -f Src_package
    unset -f Src_prepare
    unset -f Src_configure
    unset -f Src_compile
    unset -f Src_check
    unset -f Src_install
    unset -f Src_post
    unset package packagedir archive
    unset build host target prefix with enable disable
    unset extract delete patch
fi

