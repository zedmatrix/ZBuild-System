#!/bin/bash
#   5.03 - GCC-14.2.0 - Pass 1
#   unset functions
#
unset -f Src_prepare
unset -f Src_configure
unset -f Src_compile
unset -f Src_check
unset -f Src_install
unset -f Src_post
# 
#  Global
#
package=gcc-14.2.0
packagedir=${package}
archive=$(find ${ZBUILD_sources} -name "${package}*.tar.*" | sort -V | head -1 | xargs basename)
delete="true"
patch="false"
target="--target=${LFS_TGT}"
prefix="--prefix=${LFS}/tools"
with="--with-glibc-version=2.40 --with-sysroot=${LFS} --with-newlib --without-headers"
enable="--enable-default-pie --enable-default-ssp --enable-languages=c,c++"
disable="--disable-nls --disable-shared --disable-multilib --disable-threads --disable-libatomic --disable-libgomp --disable-libquadmath --disable-libssp --disable-libvtv --disable-libstdcxx"

#
#   Build Functions
# 
Src_Extract() {
	zprint " Extracting: ${archive} "
	mkdir -v "${ZBUILD_root}/${packagedir}"
	tar -xf "${ZBUILD_sources}/${archive}" -C "${ZBUILD_root}/${packagedir}" --strip-components=1
}
# exit code 99 - executed inside ${packagedir}
Src_prepare() {
    zprint " Preparing ${package} "
    tar -xf ${ZBUILD_sources}/mpfr-4.2.1.tar.xz || { echo "Extract of mpfr failed."; exit 99; }
    tar -xf ${ZBUILD_sources}/gmp-6.3.0.tar.xz || { echo "Extract of gmp failed."; exit 99; }
    tar -xf ${ZBUILD_sources}/mpc-1.3.1.tar.gz || { echo "Extract of mpc failed."; exit 99; }
    mv -v mpfr-4.2.1 mpfr
    mv -v gmp-6.3.0 gmp
    mv -v mpc-1.3.1 mpc

    case $(uname -m) in
      x86_64)
        sed -e '/m64=/s/lib64/lib/' -i.orig gcc/config/i386/t-linux64
      ;;
    esac
    mkdir -v build
    cd build
}
# exit code 88
Src_configure() {
    zprint " Configuring ${package} "
    ../configure ${target} ${prefix} ${with} ${enable} ${disable} || exit 88
}
# exit code 77
Src_compile() {
    zprint " Compiling ${package} "
    make || exit 77
}
# exit code 66
Src_check() {
    zprint " Checking ${package} "
#   make check
}
# exit code 55
Src_install() {
    zprint " Installing ${package} "
    make install || exit 55
    cd ..
    cat gcc/limitx.h gcc/glimits.h gcc/limity.h > `dirname $($LFS_TGT-gcc -print-libgcc-file-name)`/include/limits.h
}
# executed outside $[packagedir] inside ${ZBUILD_root}
Src_post() {
    zprint " Finalizing ${package} "

}

export package packagedir archive delete patch
export prefix target with enable disable
export -f Src_Extract
export -f Src_prepare
export -f Src_configure
export -f Src_compile
export -f Src_check
export -f Src_install
export -f Src_post

${ZBUILD_script} || { echo "Error: Missing ZBUILD_script."; exit 2; }
exit_code=$?

if [[ exit_code -ne 0 ]]; then
    zprint " Error Code: ${exit_code} "
else
    zprint " Success "
    unset -f Src_prepare
    unset -f Src_configure
    unset -f Src_compile
    unset -f Src_check
    unset -f Src_install
    unset -f Src_post
    unset package packagedir archive delete patch
    unset prefix target with enable disable
fi
